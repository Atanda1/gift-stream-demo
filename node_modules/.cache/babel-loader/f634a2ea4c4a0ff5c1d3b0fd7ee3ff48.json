{"ast":null,"code":"import { reactive, computed, watch, readonly } from \"vue\"; //import connectMetamask from \"./connectMetamask\";\n\nconst STATE_NAME = \"userState\";\nconst defaultState = {\n  address: \"\",\n  signer: null,\n  status: false\n};\n\nconst getDefaultState = () => {\n  if (localStorage.getItem(STATE_NAME) !== null) {\n    return JSON.parse(localStorage.getItem(STATE_NAME));\n  }\n\n  return defaultState;\n};\n\nconst state = reactive(getDefaultState);\nconst getters = {\n  getStatus: () => {\n    return computed(() => state.status);\n  }\n};\nconst actions = {\n  connectMetamask: async () => {}\n};\nwatch(() => state, () => {\n  localStorage.setItem(STATE_NAME, JSON.stringify(state));\n}, {\n  deep: true\n});\nexport default (() => {\n  if (localStorage.getItem(STATE_NAME) === null) {\n    localStorage.setItem(STATE_NAME, JSON.stringify(state));\n  }\n\n  return {\n    state: readonly(),\n    ...getters,\n    ...actions\n  };\n});","map":{"version":3,"sources":["/Users/david/Documents/projects/gift-stream-demo/src/composables/index.js"],"names":["reactive","computed","watch","readonly","STATE_NAME","defaultState","address","signer","status","getDefaultState","localStorage","getItem","JSON","parse","state","getters","getStatus","actions","connectMetamask","setItem","stringify","deep"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,KAA7B,EAAoCC,QAApC,QAAoD,KAApD,C,CACA;;AAGA,MAAMC,UAAU,GAAG,WAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;;AAMA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIC,YAAY,CAACC,OAAb,CAAqBP,UAArB,MAAqC,IAAzC,EAA+C;AAC7C,WAAOQ,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqBP,UAArB,CAAX,CAAP;AACD;;AAED,SAAOC,YAAP;AACD,CAND;;AAQA,MAAMS,KAAK,GAAGd,QAAQ,CAACS,eAAD,CAAtB;AAEA,MAAMM,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOf,QAAQ,CAAC,MAAMa,KAAK,CAACN,MAAb,CAAf;AACD;AAHa,CAAhB;AAMA,MAAMS,OAAO,GAAG;AACZC,EAAAA,eAAe,EAAE,YAAY,CAE5B;AAHW,CAAhB;AAMAhB,KAAK,CACH,MAAMY,KADH,EAEH,MAAM;AACJJ,EAAAA,YAAY,CAACS,OAAb,CAAqBf,UAArB,EAAiCQ,IAAI,CAACQ,SAAL,CAAeN,KAAf,CAAjC;AACD,CAJE,EAKH;AAAEO,EAAAA,IAAI,EAAE;AAAR,CALG,CAAL;AAQA,gBAAe,MAAM;AACnB,MAAIX,YAAY,CAACC,OAAb,CAAqBP,UAArB,MAAqC,IAAzC,EAA+C;AAC7CM,IAAAA,YAAY,CAACS,OAAb,CAAqBf,UAArB,EAAiCQ,IAAI,CAACQ,SAAL,CAAeN,KAAf,CAAjC;AACD;;AAED,SAAO;AACLA,IAAAA,KAAK,EAAEX,QAAQ,EADV;AAEL,OAAGY,OAFE;AAGL,OAAGE;AAHE,GAAP;AAKD,CAVD","sourcesContent":["import { reactive, computed, watch, readonly } from \"vue\";\n//import connectMetamask from \"./connectMetamask\";\n\n\nconst STATE_NAME = \"userState\";\n\nconst defaultState = {\n  address: \"\",\n  signer: null,\n  status: false,\n};\n\nconst getDefaultState = () => {\n  if (localStorage.getItem(STATE_NAME) !== null) {\n    return JSON.parse(localStorage.getItem(STATE_NAME));\n  }\n\n  return defaultState;\n};\n\nconst state = reactive(getDefaultState);\n\nconst getters = {\n  getStatus: () => {\n    return computed(() => state.status);\n  },\n};\n\nconst actions = {\n    connectMetamask: async () => { \n        \n    }\n};\n\nwatch(\n  () => state,\n  () => {\n    localStorage.setItem(STATE_NAME, JSON.stringify(state));\n  },\n  { deep: true }\n);\n\nexport default () => {\n  if (localStorage.getItem(STATE_NAME) === null) {\n    localStorage.setItem(STATE_NAME, JSON.stringify(state));\n  }\n\n  return {\n    state: readonly(),\n    ...getters,\n    ...actions,\n  };\n};"]},"metadata":{},"sourceType":"module"}